name: Build

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
#  if: (github.event_name == 'schedule')
#  GITHUB_ENV: https://docs.github.com/en/actions/learn-github-actions/environment-variables#about-environment-variables
  FF_VERSION: ${{ secrets.FF_VER }} # TODO: latest release if triggered by schedule
  LLVM_VER: 15
  VCVER: '14.27.29110'
  WINSDKVER: '10.0.19041.0'
  NINJA_STATUS: '[%f/%t %e %r]'
  SF_PW_MAPPED: ${{ secrets.SF_PW }}
  SF_USER_MAPPED: ${{ secrets.SF_USER }}

jobs:
  VS2022:
    runs-on: windows-2022
    env:
      TARGET_OS: ${{ matrix.target }}
      CONFIG_SUFFIX: -${{ matrix.config }}
    strategy:
      fail-fast: false
      matrix:
        config: [default,lite]
        target: [windows-desktop,uwp]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Create Build Environment
      shell: cmd
      run: |
        set FF_BRANCH=%FF_VERSION%
        if not [%FF_BRANCH%]==[master] set FF_BRANCH=release/%FF_VERSION%
        git clone -b %FF_BRANCH% --depth 1 --no-tags https://git.ffmpeg.org/ffmpeg.git ffmpeg-%FF_VERSION%
        if not [%CONFIG_SUFFIX%]==[-default] copy /y config%CONFIG_SUFFIX%.sh config.sh
    - uses: msys2/setup-msys2@v2
      with:
        release: false # disable installation cache, so exe path in avbuild.sh is correct
        msystem: MSYS
        update: true
        install: >-
          make
          diffutils
          patch
          pkg-config
          nasm
          yasm
    - name: Install dev packages
      shell: msys2 {0}
      run: |
        wget https://sourceforge.net/projects/avbuild/files/dep/dep.7z/download -O dep.7z
    - name: Configure and Build
      shell: cmd
      run: |
        7z x -y dep.7z -otools
        set PKG_CONFIG_PATH_MFX=%CD%\tools\dep\VS2022\lib\pkgconfig
        set MSYS2_DIR=C:\msys64
        set HOME=%CD%
        set FFSRC=%CD%\ffmpeg-%FF_VERSION%
        set BUILD_NOW=true
        tools\vcbuild.bat VS2019 %TARGET_OS%10 all
    - name: Make SDK
      shell: cmd
      run: |
        set SDK_NAME=ffmpeg-%FF_VERSION%-%TARGET_OS%-vs2022%CONFIG_SUFFIX%
        move sdk* %SDK_NAME%
        7z a -ssc -m0=lzma2 -mx=9 -ms=on -mf=off %SDK_NAME%.7z %SDK_NAME%
    - name: Archieve SDK
      uses: actions/upload-artifact@v2
      with:
        name: ffmpeg-${{ env.FF_VERSION }}-${{ env.TARGET_OS }}-VS2022${{ matrix.config }}
        path: ffmpeg-*.7z